---
import { getLangFromUrl, useTranslations } from "../i18n/utils";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const items = `src/rss/items-${lang}.json`;
import { readFileSync } from "fs";
import path from "path";
// const itemsPath = path.join("../rss/", `items-${language}`, ".json");
let data;
try {
  const rawData = readFileSync(items, "utf8");
  data = JSON.parse(rawData);
  console.log(data);
} catch (error) {
  console.error("Error reading the file:", error);
  data = null;
}

import { BookText } from "lucide-astro";
import ReadMoreLink from "./ReadMoreLink.astro";

const blogURL = import.meta.env.BLOG_RSS_URL;
const cleanedURL = blogURL.replace(/\/[^\/]*$/, "");
---

<div
  class="snap-center w-full py-4 px-2 md:px-4 min-h-screen flex flex-col justify-center items-center"
>
  <div class="flex flex-col justify-center items-center">
    <div class="flex flex-col w-full justify-center items-center">
      <div class="flex">
        <BookText class="h-10 w-10" />
        <div class="flex flex-row">
          <h2 class="text-3xl md:text-4xl font-mono text-gray-800">Blogs</h2>
        </div>
      </div>
    </div>

    <div
      id="scrollContainer"
      class="mt-4 py-3 relative font-noto grid grid-cols-1 xl:grid-cols-2 xl:gap-4 gap-3"
    >
      {
        data.slice(0, 8).map(({ title, contentSnippet, og, link }: any) => {
          return (
            <div class="w-full bg-gray-200 rounded-3xl border shadow grid grid-cols-2 border-gray-500/10 p-4 transition ease-out delay-50 hover:shadow-lg">
              <div class="w-full">
                <h4 class="text-base font-bold font-noto">{title}</h4>
                <p class="text-xs md:text-base line-clamp-2 font-noto">
                  {contentSnippet}
                </p>
              </div>
              <div class="w-full">
                <img
                  loading="lazy"
                  src={og}
                  alt=""
                  class="saturate-100 aspect-auto rounded-2xl ml-2"
                />
              </div>
              <div class="col-span-2">
                <ReadMoreLink link={link} width="100" />
              </div>
            </div>
          );
        })
      }
      <div></div>
    </div>
    <a href=`${cleanedURL}` class="">
      <button
        class="bg-gray-200 text-gray-600 border-gray-400 w-full text-sm font-semibold border p-3 py-3 rounded-xl transition duration-200 hover:border-orange-400 hover:bg-gray-300 mt-4"
      >
        {t("button.findmore")}
      </button>
    </a>
  </div>
</div>
<style>
  .button {
    padding: 0.375rem;
    margin-top: 1rem;
    border-radius: 0.75rem;
    border-width: 1px;
    border-color: #9ca3af;
    width: 100%;
    font-size: 0.875rem;
    line-height: 1.25rem;
    font-weight: 600;
    text-align: left;
    color: #4b5563;
    background-color: #e5e7eb;
    transition-property: background-color, border-color, color, fill, stroke,
      opacity, box-shadow, transform;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 300ms;
    transition-duration: 200ms;
  }
  .button:hover {
    background-color: #d1d5db;
    border-color: #f97316;
  }
  .button > span > span {
    transition-duration: 300ms;
    color: #9ca3af;
    position: relative;
    right: 5px;
    opacity: 0;
  }
  .button:hover > span > span {
    transition-duration: 300ms;
    color: #f97316;
    opacity: 1;
    position: relative;
    right: 0px;
  }
</style>
