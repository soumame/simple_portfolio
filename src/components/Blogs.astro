---
import { getLangFromUrl, useTranslations } from "../i18n/utils";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const items = `src/rss/items-${lang}.json`;
import { readFileSync } from "fs";
import path from "path";
// const itemsPath = path.join("../rss/", `items-${language}`, ".json");
let data;
try {
  const rawData = readFileSync(items, "utf8");
  data = JSON.parse(rawData);
  console.log(data);
} catch (error) {
  console.error("Error reading the file:", error);
  data = null;
}

import { BookText } from "lucide-astro";

const blogURL = import.meta.env.BLOG_RSS_URL;
const cleanedURL = blogURL.replace(/\/[^\/]*$/, "");
---

<div class="snap-center w-full py-4 px-2 md:px-4">
  <div class="flex flex-col justify-center items-center">
    <div class="flex flex-col w-full">
      <div class="flex md:flex-col">
        <BookText class="h-10 w-10" />
        <div class="flex flex-row">
          <h2 class="text-4xl md:my-2 font-mono text-gray-800">Blogs</h2>
        </div>
      </div>
    </div>

    <div
      id="scrollContainer"
      class="mt-4 py-3 relative font-noto grid grid-cols-1 xl:grid-cols-2 xl:gap-4"
    >
      {
        data.slice(0, 10).map(({ title, contentSnippet, og, link }) => {
          return (
            <div class=" mt-2 flex flex-wrap-reverse justify-center items-center bg-gray-200 rounded-3xl p-2 md:p-4 shadow-md border border-gray-500/10">
              <div class="w-full max-w-xs">
                <h3 class="text-base font-bold font-noto pt-2">{title}</h3>
                <p class="line-clamp-2 text-xs md:text-base pt-2">
                  {contentSnippet}
                </p>
                <a href={link}>
                  <button class="bg-gray-200 text-left text-gray-600 border-gray-400 w-full text-sm font-semibold border p-2 rounded-xl transition duration-200 hover:border-orange-400 hover:bg-gray-300 mt-4">
                    <p class="">{t("button.readmore")}</p>
                    <p class="text-xs text-gray-400 font-medium line-clamp-1 flex flex-wrap">
                      {link}
                    </p>
                  </button>
                </a>
              </div>
              <div class="ml-2 w-full max-w-xs flex justify-center items-center">
                <img
                  src={og}
                  alt=""
                  class="saturate-100 aspect-auto rounded-2xl"
                />
              </div>
            </div>
          );
        })
      }
      <div>
        <a href=`${cleanedURL}` class="">
          <button
            class="bg-gray-200 text-gray-600 border-gray-400 w-full text-sm font-semibold border p-1.5 py-3 rounded-xl transition duration-200 hover:border-orange-400 hover:bg-gray-300 mt-4"
          >
            {t("button.findmore")}
          </button>
        </a>
      </div>
    </div>
  </div>
</div>
